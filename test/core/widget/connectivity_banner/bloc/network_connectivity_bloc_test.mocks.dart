// Mocks generated by Mockito 5.4.6 from annotations
// in clean_architecture_assignment/test/core/widget/connectivity_banner/bloc/network_connectivity_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i4;

import 'package:clean_architecture_assignment/core/services/network_connectivity/network_connectivity_service.dart'
    as _i2;
import 'package:flutter/material.dart' as _i6;
import 'package:flutter/services.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NetworkConnectivityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkConnectivityService extends _i1.Mock
    implements _i2.NetworkConnectivityService {
  MockNetworkConnectivityService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<bool> get connectionStream =>
      (super.noSuchMethod(
            Invocation.getter(#connectionStream),
            returnValue: _i3.Stream<bool>.empty(),
          )
          as _i3.Stream<bool>);

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  void didChangeAppLifecycleState(_i4.AppLifecycleState? state) =>
      super.noSuchMethod(
        Invocation.method(#didChangeAppLifecycleState, [state]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void initialize() => super.noSuchMethod(
    Invocation.method(#initialize, []),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<bool> didPopRoute() =>
      (super.noSuchMethod(
            Invocation.method(#didPopRoute, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  bool handleStartBackGesture(_i5.PredictiveBackEvent? backEvent) =>
      (super.noSuchMethod(
            Invocation.method(#handleStartBackGesture, [backEvent]),
            returnValue: false,
          )
          as bool);

  @override
  void handleUpdateBackGestureProgress(_i5.PredictiveBackEvent? backEvent) =>
      super.noSuchMethod(
        Invocation.method(#handleUpdateBackGestureProgress, [backEvent]),
        returnValueForMissingStub: null,
      );

  @override
  void handleCommitBackGesture() => super.noSuchMethod(
    Invocation.method(#handleCommitBackGesture, []),
    returnValueForMissingStub: null,
  );

  @override
  void handleCancelBackGesture() => super.noSuchMethod(
    Invocation.method(#handleCancelBackGesture, []),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<bool> didPushRoute(String? route) =>
      (super.noSuchMethod(
            Invocation.method(#didPushRoute, [route]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> didPushRouteInformation(
    _i6.RouteInformation? routeInformation,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#didPushRouteInformation, [routeInformation]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  void didChangeMetrics() => super.noSuchMethod(
    Invocation.method(#didChangeMetrics, []),
    returnValueForMissingStub: null,
  );

  @override
  void didChangeTextScaleFactor() => super.noSuchMethod(
    Invocation.method(#didChangeTextScaleFactor, []),
    returnValueForMissingStub: null,
  );

  @override
  void didChangePlatformBrightness() => super.noSuchMethod(
    Invocation.method(#didChangePlatformBrightness, []),
    returnValueForMissingStub: null,
  );

  @override
  void didChangeLocales(List<_i4.Locale>? locales) => super.noSuchMethod(
    Invocation.method(#didChangeLocales, [locales]),
    returnValueForMissingStub: null,
  );

  @override
  void didChangeViewFocus(_i4.ViewFocusEvent? event) => super.noSuchMethod(
    Invocation.method(#didChangeViewFocus, [event]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<_i4.AppExitResponse> didRequestAppExit() =>
      (super.noSuchMethod(
            Invocation.method(#didRequestAppExit, []),
            returnValue: _i3.Future<_i4.AppExitResponse>.value(
              _i4.AppExitResponse.exit,
            ),
          )
          as _i3.Future<_i4.AppExitResponse>);

  @override
  void didHaveMemoryPressure() => super.noSuchMethod(
    Invocation.method(#didHaveMemoryPressure, []),
    returnValueForMissingStub: null,
  );

  @override
  void didChangeAccessibilityFeatures() => super.noSuchMethod(
    Invocation.method(#didChangeAccessibilityFeatures, []),
    returnValueForMissingStub: null,
  );
}
